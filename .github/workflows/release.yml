name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      TAG_NAME: ${{ github.ref_name }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Run Tests
        run: go test ./...

      - name: Build Binaries
        run: |
          set -euo pipefail
          mkdir -p dist
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/gix_linux_amd64 .
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/gix_darwin_amd64 .
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/gix_darwin_arm64 .
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/gix_windows_amd64.exe .

      - name: Generate Checksums
        run: |
          cd dist
          sha256sum gix_* > checksums.txt

      - name: Extract Release Notes
        run: |
          awk -v tag="## [$TAG_NAME]" '
            $0 == tag {capture=1; next}
            capture && /^## \[/ {exit}
            capture {print}
          ' CHANGELOG.md > release_notes.md
          if [ ! -s release_notes.md ]; then
            echo "Release notes for ${TAG_NAME}" > release_notes.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: "gix ${{ env.TAG_NAME }}"
          body_path: release_notes.md
          files: |
            dist/gix_linux_amd64
            dist/gix_darwin_amd64
            dist/gix_darwin_arm64
            dist/gix_windows_amd64.exe
            dist/checksums.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
